// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    Int      @id @default(autoincrement())
  name                  String
  email                 String   @unique
  password              String
  isAdmin               Boolean  @default(false)
  createdAt             DateTime @default(now())
  updatedAt             DateTime @default(now())
  likedRecipes          Recipe[]
  orders                Orders[]
  wallet                Int      @default(0)
  location              String?
  phone                 String?
  pushNotificationToken String?
  Review                Review[]
  verified              Boolean  @default(false)
}

model Recipe {
  id          Int          @id @default(autoincrement())
  name        String
  imageUrl    String
  description String
  ingredients Ingredient[]
  steps       String[]
  likedBy     User[]
  servings    Int
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now())
  Orders      Orders[]
  reviews     Review[]
}

model Ingredient {
  id          Int      @id @default(autoincrement())
  name        String
  measurement String
  amount      Int
  price       Int
  recipeId    Int
  recipe      Recipe   @relation(fields: [recipeId], references: [id])
  orders      Orders[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
}

model Orders {
  id          String       @id @unique
  userId      Int
  recipeId    Int
  user        User         @relation(fields: [userId], references: [id])
  recipe      Recipe       @relation(fields: [recipeId], references: [id])
  ingredients Ingredient[]
  total       Int
  delivered   Boolean      @default(false)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now())
}

model Review {
  id        Int      @id @unique @default(autoincrement())
  userId    Int
  recipeId  Int
  user      User     @relation(fields: [userId], references: [id])
  recipe    Recipe   @relation(fields: [recipeId], references: [id])
  rating    Int
  review    String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}
